/*
 * Torque API Reference
 * This page contains information about the Torque APIs and how to use it.<br><br>To be able to test the API methods, you will need an access token to be set in the Authorize section.If you got to this page from your Torque account, we already made it available for you, but you can switch to a different token as needed.<br>To get a different token, use the 'Get token' function available under the 'Access Tokens' section. After running the method, copy the access_token you get in the response and set it in the Authorize fieldas 'Bearer access_token'. For example: Bearer fqSWuw72BbUVFn8AbokF77GJ0r5KEn9MiZjLXF8kBwI.<br><br>The API can be accessed with your account endpoint as will be mentioned in the descriptions and examples or using https://qtorque.io as the prefix instead.
 *
 * OpenAPI spec version: latest
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package org.jenkinsci.plugins.torque.api;

import com.google.gson.annotations.SerializedName;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class EnvironmentMetadataResponse {
  @SerializedName("name")
  private String name = null;

  @SerializedName("automation")
  private Boolean automation = null;

  @SerializedName("blueprint")
  private String blueprint = null;

  @SerializedName("blueprint_name")
  private String blueprintName = null;

  @SerializedName("blueprint_inputs")
  private List<BlueprintInputParameterResponse> blueprintInputs = null;

  public EnvironmentMetadataResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public EnvironmentMetadataResponse automation(Boolean automation) {
    this.automation = automation;
    return this;
  }

   /**
   * Get automation
   * @return automation
  **/
  
  public Boolean isAutomation() {
    return automation;
  }

  public void setAutomation(Boolean automation) {
    this.automation = automation;
  }

   /**
   * Get blueprint
   * @return blueprint
  **/
  
  public String getBlueprint() {
    return blueprint;
  }

  public EnvironmentMetadataResponse blueprintName(String blueprintName) {
    this.blueprintName = blueprintName;
    return this;
  }

   /**
   * Get blueprintName
   * @return blueprintName
  **/
  
  public String getBlueprintName() {
    return blueprintName;
  }

  public void setBlueprintName(String blueprintName) {
    this.blueprintName = blueprintName;
  }

  public EnvironmentMetadataResponse blueprintInputs(List<BlueprintInputParameterResponse> blueprintInputs) {
    this.blueprintInputs = blueprintInputs;
    return this;
  }

  public EnvironmentMetadataResponse addBlueprintInputsItem(BlueprintInputParameterResponse blueprintInputsItem) {
    if (this.blueprintInputs == null) {
      this.blueprintInputs = new ArrayList<BlueprintInputParameterResponse>();
    }
    this.blueprintInputs.add(blueprintInputsItem);
    return this;
  }

   /**
   * Get blueprintInputs
   * @return blueprintInputs
  **/
  
  public List<BlueprintInputParameterResponse> getBlueprintInputs() {
    return blueprintInputs;
  }

  public void setBlueprintInputs(List<BlueprintInputParameterResponse> blueprintInputs) {
    this.blueprintInputs = blueprintInputs;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EnvironmentMetadataResponse environmentMetadataResponse = (EnvironmentMetadataResponse) o;
    return Objects.equals(this.name, environmentMetadataResponse.name) &&
        Objects.equals(this.automation, environmentMetadataResponse.automation) &&
        Objects.equals(this.blueprint, environmentMetadataResponse.blueprint) &&
        Objects.equals(this.blueprintName, environmentMetadataResponse.blueprintName) &&
        Objects.equals(this.blueprintInputs, environmentMetadataResponse.blueprintInputs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, automation, blueprint, blueprintName, blueprintInputs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EnvironmentMetadataResponse {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    automation: ").append(toIndentedString(automation)).append("\n");
    sb.append("    blueprint: ").append(toIndentedString(blueprint)).append("\n");
    sb.append("    blueprintName: ").append(toIndentedString(blueprintName)).append("\n");
    sb.append("    blueprintInputs: ").append(toIndentedString(blueprintInputs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
